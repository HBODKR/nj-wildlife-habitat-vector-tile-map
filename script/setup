#!/bin/sh

### Prepare Client Data Sources ###

# Convert data from FileGDB to open formats
ogr2ogr -t_srs 'EPSG:4326' -f 'GPKG' ./data/skylands_habitat.gpkg ./data/skylands_v3_3gdb/skylands_v3_3.gdb Envr_hab_ls_v3_3_skylands
ogr2ogr -f 'CSV' ./data/skylands_species.csv ./data/skylands_v3_3gdb/skylands_v3_3.gdb Envr_hab_ls_v3_3_skyland_sp_05

# Convert data to line-delimited GeoJSON text file
python3 ./src/create-habitat-line-delimited-json-file.py

# Directory for tiles
mkdir -p tiles

#Directory for individual habitat files
mkdir -p habitat

# Habitat Polygon Vector Tiles
# Read habitat features and convert to vector tiles
tippecanoe --read-parallel -z 13 -Z 11 -f -o ./tiles/habitat-areas.mbtiles ./data/features.txt

# Individual Habitat GeoJSON Files
# Save habitat features to individual GeoJSON files named by LINKID
parallel --pipepart -a ./data/features.txt --block 3M node ./src/create-habitat-individual-json-files.js

# Habitat Point Overview Vector Tiles
# Read habitat features line-by-line in parallel, generate species report points, then convert to vector tiles
parallel --pipepart -a ./data/features.txt --block 3M node ./src/create-species-sighting-points.js | tippecanoe -rg -f -o ./tiles/sightings.mbtiles
